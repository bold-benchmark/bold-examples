PREFIX sosa: <http://www.w3.org/ns/sosa/>
PREFIX ssn: <http://www.w3.org/ns/ssn/>
PREFIX jsonschema: <https://www.w3.org/2019/wot/json-schema#>
PREFIX ua: <http://example.org/opcua#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dct: <http://purl.org/dc/terms/>

INSERT {
    GRAPH ?p {
        ?p a sosa:ObservableProperty, ssn:Property .
    }
} WHERE {
    ?system ssn:hasProperty ?p .
};

DELETE {
    ?bnode a ssn:Property, ?schema ;
           rdfs:label ?label ;
           dct:identifier ?id .
} INSERT {
    GRAPH ?var {
        ?var a ua:Variable, ?schema ;
             rdfs:label ?label ;
             ?p ?o .
    }
} WHERE {
    ?bnode a ssn:Property ;
           rdfs:label ?label ;
           dct:identifier ?id .

    # TODO add sameAs links between UA variables and DA variables.

    FILTER (isBlank(?bnode) && strstarts(?id, "%"))

    OPTIONAL {
        # identifer used for mapping between auto-gen file and manually curated file
        ?otherBnode dct:identifier ?id ; ?p ?o .
        FILTER (?bnode != ?otherBnode)
    }

    ?bnode a ?schema .
    FILTER (strstarts(str(?schema), str(jsonschema:)))

    BIND (iri(strafter(?id, "%")) AS ?var)
};

INSERT {
    GRAPH ?var {
        ?var rdfs:seeAlso ?valueURI .
    }

    GRAPH ?valueURI {
        ?valueURI rdf:value ?defaultValue .
    }
} WHERE {
    ?var a ua:Variable .

    OPTIONAL {
        {
            ?var a jsonschema:BooleanSchema .
            BIND ("false"^^rdf:JSON AS ?jsonValue)
        } UNION {
            ?var a jsonschema:NumberSchema .
            BIND ("0.0"^^rdf:JSON AS ?jsonValue)
        } UNION {
            ?var a jsonschema:IntegerSchema .
            BIND ("0"^^rdf:JSON AS ?jsonValue)
        }
    }

    BIND (uri(concat(str(?var), "/value")) AS ?valueURI)
    BIND (if(bound(?jsonValue), ?jsonValue, "null"^^rdf:JSON) AS ?defaultValue)
};

#Â TODO to remove (the motor should be turned on by agents)

DELETE DATA {
    GRAPH <MD60/value> {
        <MD60/value> rdf:value "0.0"^^rdf:JSON .
    }
};

INSERT DATA {
    GRAPH <MD60/value> {
        <MD60/value> rdf:value "10"^^rdf:JSON .
    }
}